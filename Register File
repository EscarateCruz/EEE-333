//Register File for Microprocessor

module regFile(input reset, clk, input[3:0] RA, input [3:0] RB, input [3:0] RD, input [3:0] OPCODE, input [2:0] current_state, input [7:0] RF_data_in, output logic [7:0] RF_data_out0, output logic [7:0] RF_data_out1);

localparam IF = 3'b001, ID = 3'b010, FD = 3'b011, EX = 3'b100, regWrite = 3'b101;

logic [7:0] RF [15:0];
logic [4:0] i;

always_ff @ (posedge clk or posedge reset) begin

	if (reset) begin
		RF_data_out0 <= 8'd0;
		RF_data_out1 <= 8'd0;
		i = 5'd0;
		for (i=5'd0; i<5'd16; i=i+5'd1)
			RF[i] <= 8'd0;
		end

	else begin
		RF_data_out0 <= RF[RA];
		RF_data_out1 <= RF[RB];
		if ((current_state == regWrite) && ~((OPCODE == 4'd13) || ((OPCODE == 4'd14) || (OPCODE == 4'd15))))
			RF[RD] <= RF_data_in;
		end
	end

endmodule
